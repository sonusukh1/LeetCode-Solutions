class Solution {
    public int[] numsSameConsecDiff(int n, int k) {
        if(n==1)
            return new int []  {0,1,2,3,4,5,6,7,8,9};
        ArrayList<Integer> list = new ArrayList<>();
    for(int i=1;i<=9;i++)
    {
        dfs(n,k,i,0,i,list);
    }
        int [] arr =new int [list.size()];
        for(int i=0;i<list.size();i++)
        {
            arr[i]=list.get(i);
        }
        return arr;
        }
    
    public void dfs(int N,int k,int curr,int i,int prev,ArrayList<Integer> list)
    {
        if(i==N-1)
        {
            list.add(curr);
            return;
        }
        int next=prev+k;
        if(next<10)
        {
            dfs(N,k,curr*10+next,i+1,next,list);
        }
        next=prev-k;
        if(k!=0 && next>=0)
        {
            dfs(N,k,curr*10+next,i+1,next,list);
        }
    }
}
